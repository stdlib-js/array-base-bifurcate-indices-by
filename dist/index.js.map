{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolveGetter = require( '@stdlib/array-base-resolve-getter' );\n\n\n// MAIN //\n\n/**\n* Splits element indices into two groups according to an predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - predicate function execution context\n* @returns {Object} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateIndicesBy( x, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateIndicesBy( x, predicate, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( predicate.call( thisArg, get( x, i ), i, x ) ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bifurcateIndicesBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split element indices into two groups according to an predicate function.\n*\n* @module @stdlib/array-base-bifurcate-indices-by\n*\n* @example\n* var bifurcateIndicesBy = require( '@stdlib/array-base-bifurcate-indices-by' );\n*\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateIndicesBy( x, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,mCAAoC,EAuBjE,SAASC,EAAoBC,EAAGC,EAAWC,EAAU,CACpD,IAAIC,EACAC,EACAC,EACAC,EAIJ,GADAF,EAAMJ,EAAE,OACHI,IAAQ,EACZ,MAAO,CAAC,EAOT,IAJAD,EAAML,EAAeE,CAAE,EAGvBK,EAAM,CAAE,CAAC,EAAG,CAAC,CAAE,EACTC,EAAI,EAAGA,EAAIF,EAAKE,IAChBL,EAAU,KAAMC,EAASC,EAAKH,EAAGM,CAAE,EAAGA,EAAGN,CAAE,EAC/CK,EAAK,CAAE,EAAE,KAAMC,CAAE,EAEjBD,EAAK,CAAE,EAAE,KAAMC,CAAE,EAGnB,OAAOD,CACR,CAKAR,EAAO,QAAUE,IClCjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "resolveGetter", "bifurcateIndicesBy", "x", "predicate", "thisArg", "get", "len", "out", "i", "main"]
}
